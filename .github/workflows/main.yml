name: Backend CD
on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v3
       
      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
        
      - name: Grant permission for gradlew
        run: chmod +x ./gradlew
    
      - name: Application Build
        run: ./gradlew build

      - name: Docker Image Build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/spring-docker .

      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Hub Publish
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/spring-docker
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v3        

      - name: WAS Instance Connect And Docker Run
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            dList=$(echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker ps -a -q)
            
            if [ !$dList ]
            then
              echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker stop $dList &&\
              echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker rm $dList
            fi
            
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker pull ${{ secrets.DOCKERHUB_USERNAME }}/spring-docker &&\
            sudo docker run -d -p 8080:8080 --name spring-docker ${{ secrets.DOCKERHUB_USERNAME }}/spring-docker
